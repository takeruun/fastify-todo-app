name: CI

on:
  push:
    branches-ignore:
      - main
      - develop

jobs:
  echo-branch:
    name: echo branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - run: echo ${GITHUB_REF#refs/heads/}

      - run: echo ${{github.head_ref}}

  check-change-migrations:
    name: Check change migrations
    runs-on: ubuntu-latest
    outputs:
      check_diff: ${{ steps.set-check_diff.outputs.check_diff }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: technote-space/get-diff-action@v6
        id: check-diff
        with:
          PATTERNS: back/db/migrations/**
      - run: echo ${{ env.GIT_DIFF }}
      - run: echo ${{ env.GIT_DIFF_FILTERED }}
      - name: Set check_diff
        if: steps.check-diff.outputs.diff
        id: set-check_diff
        run: echo "check_diff=1" >> $GITHUB_OUTPUT

  check-cache-init-sql:
    name: Check cache sql data
    runs-on: ubuntu-latest
    outputs:
      file_not_exists: ${{ steps.set-file_not_exists.outputs.file_not_exists }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - uses: ./.github/actions/migrations-hash
        id: migrations-hash

      - uses: actions/cache@v3
        id: cache-init-sql
        with:
          path: ./init.sql
          key: ${{ runner.os }}-init-sql-${{ steps.migrations-hash.outputs.hash }}
          restore-keys: |
            ${{ runner.os }}-init-sql-

      - run: echo ${{steps.cache-init-sql.outputs.cache-hit}}

      - name: Set file_not_exists
        if: steps.cache-init-sql.outputs.cache-hit != 'true'
        id: set-file_not_exists
        run: echo "file_not_exists=1" >> $GITHUB_OUTPUT

  migration-db:
    needs: [check-change-migrations, check-cache-init-sql]
    if: |
      needs.check-change-migrations.outputs.check_diff == 1 ||
      needs.check-cache-init-sql.outputs.file_not_exists == 1
    name: Migration DB
    env:
      DB_HOST: localhost
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD: password
      DB_DATABASE: fastify_todo
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.0.28
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          -e MYSQL_ROOT_PASSWORD=password
          --entrypoint sh mysql:8 -c "exec docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: ./.github/actions/setup-node

      - uses: ./.github/actions/migrations-hash
        id: migrations-hash

      - uses: actions/cache@v3
        with:
          path: ./init.sql
          key: ${{ runner.os }}-init-sql-${{ steps.migrations-hash.outputs.hash }}
          restore-keys: |
            ${{ runner.os }}-init-sql-

      - name: Typeorm
        run: |
          yarn workspace back createDatabase
          yarn workspace back migration:run

      - name: dump
        run: mysqldump -uroot -ppassword -h 127.0.0.1 -x --all-databases > init.sql

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: init.sql
          path: init.sql

  backend-test:
    needs: [migration-db]
    if: ${{ !failure() }}
    name: Backend Test
    env:
      DB_HOST: localhost
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD: password
      DB_DATABASE: fastify_todo
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.0.28
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          -e MYSQL_ROOT_PASSWORD=password
          --entrypoint sh mysql:8 -c "exec docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: ./.github/actions/migrations-hash
        id: migrations-hash

      - uses: actions/cache@v3
        id: cache-init-sql
        with:
          path: ./init.sql
          key: ${{ runner.os }}-init-sql-${{ steps.migrations-hash.outputs.hash }}
          restore-keys: |
            ${{ runner.os }}-init-sql-

      - name: Download artifacts
        if: steps.cache-init-sql.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v2
        with:
          name: init.sql

      - name: use init.sql
        run: mysql -uroot -ppassword -h 127.0.0.1 < init.sql

      - uses: ./.github/actions/setup-node

      - name: Run test
        id: run-test
        run: yarn workspace back test
