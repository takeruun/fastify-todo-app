name: CI

on:
  push:
    branches-ignore:
      - main
      - develop

jobs:
  download:
    name: Download
    runs-on: ubuntu-latest
    outputs:
      FILE_NOT_EXISTS: ${{ steps.FILE_NOT_EXISTS.outputs.FILE_NOT_EXISTS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set FILE_NOT_EXISTS
        id: FILE_NOT_EXISTS
        run: echo "FILE_NOT_EXISTS=true" >> $GITHUB_OUTPUT

      # - uses: ./.github/actions/download-sql
      #   with:
      #     TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: theowenyoung/folder-hash@v3
        id: l-hash
        with:
          path: back

      - name: hash
        id: hash
        run: echo "hash=$(git log -n 1 --pretty=format:"%h" -- back)" >> $GITHUB_OUTPUT

      - run: echo ${{ steps.hash.outputs.hash }}

      - run: echo ${{ steps.l-hash.outputs.hash }}

      - run: git log -n 1 --pretty=format:"%h" ./back

      # - uses: actions/cache@v3
      #   id: cache
      #   with:
      #     path: ./test_nkc.sql
      #     key: ${{ runner.os }}-${{ steps.hash.outputs.hash }}
      #     restore-keys: |
      #       ${{ runner.os }}-

  # prepare-db:
  #   name: Prepare DB
  #   env:
  #     DB_HOST: localhost
  #     DB_PORT: 3306
  #     DB_USERNAME: root
  #     DB_PASSWORD: password
  #     DB_DATABASE: fastify_todo
  #   runs-on: ubuntu-latest
  #   services:
  #     db:
  #       image: mysql:8.0.28
  #       ports:
  #         - 3306:3306
  #       env:
  #         MYSQL_ROOT_PASSWORD: password
  #       options: >-
  #         --health-cmd "mysqladmin ping"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #         -e MYSQL_ROOT_PASSWORD=password
  #         --entrypoint sh mysql:8 -c "exec docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - uses: ./.github/actions/setup-node

  #     - name: Typeorm
  #       run: |
  #         yarn workspace back createDatabase
  #         yarn workspace back migration:run

  #     - name: dump
  #       run: |
  #         mkdir mysql/data
  #         mysqldump -uroot -ppassword -h 127.0.0.1 -x --all-databases > mysql/data/init.sql

  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: initial-data
  #         path: mysql/data

  # backend-test:
  #   needs: prepare-db
  #   name: Backend Test
  #   env:
  #     DB_HOST: localhost
  #     DB_PORT: 3306
  #     DB_USERNAME: root
  #     DB_PASSWORD: password
  #     DB_DATABASE: fastify_todo
  #   runs-on: ubuntu-latest
  #   services:
  #     db:
  #       image: mysql:8.0.28
  #       ports:
  #         - 3306:3306
  #       env:
  #         MYSQL_ROOT_PASSWORD: password
  #       options: >-
  #         --health-cmd "mysqladmin ping"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #         -e MYSQL_ROOT_PASSWORD=password
  #         --entrypoint sh mysql:8 -c "exec docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"
  #   steps:
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: initial-data

  #     - name: use init.sql
  #       run: mysql -uroot -ppassword -h 127.0.0.1 < init.sql

  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - uses: ./.github/actions/setup-node

  #     - name: Run test
  #       id: run-test
  #       run: yarn workspace back test
